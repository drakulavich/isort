name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, ubuntu-18.04, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pip
          - os: ubuntu-18.04
            path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache

    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ matrix.path }}
          key:
            ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          # python -m pip install --upgrade pip
          python -m pip install pip==21.1.1
          python -m pip install --upgrade poetry

      - name: Install dependencies
        run: poetry install

      - name: Test
        shell: bash
        run: |
          poetry run pytest tests/unit/ -s --cov=isort/ --cov-report=term-missing ${@-}
          poetry run coverage xml
      - name: Report Coverage
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        uses: codecov/codecov-action@v1
